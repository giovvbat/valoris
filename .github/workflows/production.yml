name: Production CI

on:
  push:
    branches: [ "production" ]
    tags-ignore:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Resolve dependencies
      run: mvn dependency:go-offline
    - name: Build with Maven
      run: mvn -B clean package -DskipTests
    - name: Run static analysis
      run: mvn pmd:pmd pmd:check
    - name: Run tests
      run: mvn -B test
      env:
        JAVA_TOOL_OPTIONS: "-Duser.language=pt -Duser.country=BR -Dfile.encofing=UTF-8"
        
    - name: Find next rel tag
      id: get-next-tag
      run: |
        latest_rc_tag=$(git tag -l 'rc-*' | grep -E '^rc-[0-9]+\.[0-9]+$' | sed 's/rc-//' | sort -t. -k1,1n -k2,2n | tail -n1)
        latest_rel_tag=$(git tag -l 'rel-*' | grep -E '^rel-[0-9]+\.[0-9]+$' | sed 's/rel-//' | sort -t. -k1,1n -k2,2n | tail -n1)

        if [ -z "$latest_rc_tag" ]; then
          rc_major=1
          rc_minor=0
        else
          rc_major=$(echo "$latest_rc_tag" | cut -d. -f1)
          rc_minor=$(echo "$latest_rc_tag" | cut -d. -f2)
        fi
        
        if [ -z "$latest_rel_tag" ]; then
          rel_major=1
          rel_minor=0
        else
          rel_major=$(echo "$latest_rel_tag" | cut -d. -f1)
          rel_minor=$(echo "$latest_rel_tag" | cut -d. -f2)
        fi
        
        if (( rc_major > rel_major )); then
          echo "next_tag=rel-${rc_major}.0" >> "$GITHUB_OUTPUT"
        else
          new_y=$((rel_minor + 1))
          echo "next_tag=rel-${rel_major}.${new_y}" >> "$GITHUB_OUTPUT"
        fi

    - name: Create new tag ${{ steps.get-next-tag.outputs.next_tag }}
      run: |
        git tag "${{ steps.get-next-tag.outputs.next_tag }}" origin/production
        git push origin "${{ steps.get-next-tag.outputs.next_tag }}"

    - name: Create zip archive
      run: |
        zip_name="${{ steps.get-next-tag.outputs.next_tag }}.zip"
        zip -r "$zip_name" . -x ".git/*"
        ls -lh "$zip_name"

    - name: Publish package as artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.get-next-tag.outputs.next_tag }}
        path: ${{ steps.get-next-tag.outputs.next_tag }}.zip

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: giovvbatista/valoris:${{ steps.get-next-tag.outputs.next_tag }}
